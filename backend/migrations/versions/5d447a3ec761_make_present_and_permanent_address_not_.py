"""Make present and permanent address not null, and contact_number unique

Revision ID: 5d447a3ec761
Revises: 2d70cb796108
Create Date: 2025-10-24 04:05:54.806219

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '5d447a3ec761'
down_revision: Union[str, Sequence[str], None] = '2d70cb796108'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('gts_responses', 'present_address',
               existing_type=sa.TEXT(),
               nullable=False)
    op.alter_column('users', 'present_address',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('users', 'permanent_address',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.create_unique_constraint(None, 'users', ['contact_number'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='unique')
    op.alter_column('users', 'permanent_address',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('users', 'present_address',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('gts_responses', 'present_address',
               existing_type=sa.TEXT(),
               nullable=True)
    # ### end Alembic commands ###
